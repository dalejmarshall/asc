{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "vmName": {
        "type": "string"
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "16.04.0-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.5-LTS",
        "15.10",
        "16.04.0-LTS",
        "18.04-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
      }
    },
    "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D1_v2",
        "metadata": {
            "description": "Use Get-AzureRmVmSize for a list of available sizes."
        }
    },
    "sshAddressRange":{
        "type": "string",
        "defaultValue": "*",
        "metadata": {
            "description": "Enter the IP Address range in CIDR notation that can access the VM via SSH"
        } 
    },
    "ownerTag":{
        "type": "string",
        "metadata": {
            "description": "Name of the owner of the VM"
        }
    },
    "applicationTag":{
        "type": "string",
        "metadata": {
            "description": "Application the VM belongs to"
        }
    },
    "environmentTag":{
        "type": "string",
        "metadata": {
            "description": "Environment the VM belongs to. E.g. Dev, Test, Prod"
        }
    },
    "criticalityTag":{
        "type": "string",
        "allowedValues": [
            "Tier 1",
            "Tier 2",
            "Tier 3",
            "Tier 4"
        ],
        "metadata": {
            "description": "Business criticality of the application. Tier 1 is the highest criticality"
        }
    }
  },
  "variables": {
    "storageAccountName": "[toLower(concat(parameters('vmName') , uniquestring(resourceGroup().id)))]",
    "nicName": "[concat(parameters('vmName'), '-nic')]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "[concat(parameters('vmName'), '-subnet')]",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat(parameters('vmName'), '-pip')]",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "[concat(parameters('vmName'), '-vnet')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "dnsLabel": "[toLower(concat(parameters('dnsLabelPrefix'),uniqueString(subscription().subscriptionId)))]",
    "nsgName": "[concat(parameters('vmName'), '-nsg')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "[parameters('ownerTag')]",
        "application": "[parameters('applicationTag')]",
        "environment": "[parameters('environmentTag')]",
        "criticality": "[parameters('criticalityTag')]"
      },
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "[parameters('ownerTag')]",
        "application": "[parameters('applicationTag')]",
        "environment": "[parameters('environmentTag')]",
        "criticality": "[parameters('criticalityTag')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabel')]"
        }
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "[parameters('ownerTag')]",
        "application": "[parameters('applicationTag')]",
        "environment": "[parameters('environmentTag')]",
        "criticality": "[parameters('criticalityTag')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2017-03-01",
        "name": "[variables('nsgName')]",
        "location": "[parameters('location')]",
        "tags": {
            "owner": "[parameters('ownerTag')]",
            "application": "[parameters('applicationTag')]",
            "environment": "[parameters('environmentTag')]",
            "criticality": "[parameters('criticalityTag')]"
        },
        "properties": {
            "securityRules": [
                {
                    "name": "SSHAccess",
                    "properties": {
                        "access": "Allow",
                        "description": "Inbound SSH rule",
                        "direction": "Inbound",
                        "destinationAddressPrefix": "*",
                        "protocol": "Tcp",
                        "destinationPortRange": 22,
                        "sourcePortRange": "*",
                        "priority": 500,
                        "sourceAddressPrefix": "[parameters('sshAddressRange')]"
                    }
                }
            ]
        }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "[parameters('ownerTag')]",
        "application": "[parameters('applicationTag')]",
        "environment": "[parameters('environmentTag')]",
        "criticality": "[parameters('criticalityTag')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "[parameters('ownerTag')]",
        "application": "[parameters('applicationTag')]",
        "environment": "[parameters('environmentTag')]",
        "criticality": "[parameters('criticalityTag')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    }
  }
}